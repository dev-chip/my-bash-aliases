#!/bin/bash
#
# This script will prepend your commit message with a relevant emoji
# if you use the conventional commit message format.

COMMIT_MSG_FILE="$1"
COMMIT_MSG=$(head -n1 "$COMMIT_MSG_FILE")

# Define emoji shortcodes for commit types
declare -A EMOJIS=(
  ["feat"]=":sparkles:"
  ["fix"]=":bug:"
  ["docs"]=":memo:"
  ["style"]=":lipstick:"
  ["refactor"]=":recycle:"
  ["perf"]=":zap:"
  ["test"]=":white_check_mark:"
  ["build"]=":building_construction:"
  ["ci"]=":construction_worker:"
  ["chore"]=":wrench:"
  ["revert"]=":rewind:"
)

# Extract the commit type (e.g., feat from feat: or feat(auth):)
TYPE=$(echo "$COMMIT_MSG" | sed -E 's/([a-z]+):.*/\1/')

# Lookup corresponding emoji shortcode
EMOJI="${EMOJIS[$TYPE]}"

# If emoji exists and isn't already present, prepend it
if [[ -n "$EMOJI" && "$COMMIT_MSG" != "$EMOJI"* ]]; then
  # Preserve the rest of the commit message
  tail -n +2 "$COMMIT_MSG_FILE" > "$COMMIT_MSG_FILE.tmp"
  echo "$EMOJI $COMMIT_MSG" > "$COMMIT_MSG_FILE"
  cat "$COMMIT_MSG_FILE.tmp" >> "$COMMIT_MSG_FILE"
  rm "$COMMIT_MSG_FILE.tmp"
fi

exit 0
